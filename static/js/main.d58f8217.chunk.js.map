{"version":3,"sources":["config/axios.js","actions/characterActions.js","components/Characters.js","components/Background.js","actions/episodesAction.js","components/Trailers.js","components/Episodes.js","components/Navbar.js","App.js","reducers/charactersReducers.js","reducers/imageReducers.js","reducers/singleReducers.js","reducers/episodesReducers.js","index.js","store/configureStore.js"],"names":["axios","Axios","create","baseURL","setStartCharacters","data","type","payload","setSingleCharacter","Characters","handleSearchChange","e","setState","input","target","value","substr","handleToggle","prev","visible","handleGetCharacterInfo","char_id","name","portrayed","occupation","status","img","nickname","id","prevState","props","dispatch","get","then","response","catch","err","console","log","state","user","heel","this","inputSearched","characters","filter","result","toLowerCase","indexOf","className","onChange","map","char","key","onClick","src","alt","occ","style","color","Component","connect","single","Background","random","backgroundSize","backgroundPosition","backgroundImage","image","setEpisodes","Trailers","season1","season2","season3","season4","season5","all","Episodes","handleExtra","episode_id","air_date","title","season","extra","search","searchedResult","episodes","ele","opts","height","width","playerVars","autoplay","epi","i","videoId","Navbar","useState","show","handleShow","useEffect","window","addEventListener","scrollY","removeEventListener","href","App","characterInitState","charactersReducers","action","imageInitState","imageReducers","charInitState","singleReducers","epiInitState","episodesReducers","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","getState","subscribe","jsx","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d58f8217.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst axios = Axios.create({\r\n  baseURL: 'https://www.breakingbadapi.com/api/',\r\n});\r\n\r\nexport default axios;\r\n","import axios from '../config/axios';\r\nexport const setAllCharacters = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get('/characters')\r\n      .then(response => {\r\n        const data = response.data;\r\n        dispatch(setStartCharacters(data));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\nexport const setStartCharacters = data => {\r\n  return {type: 'SET_START_CHARACTERS', payload: data};\r\n};\r\n{\r\n  /*export const getRandomCharacter = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get('character/random')\r\n      .then(response => {\r\n        const data = response.data;\r\n        console.log(data, 'random');\r\n        dispatch(setImage(data));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\nexport const setImage = data => {\r\n  return {type: 'SET_START_IMAGE', payload: data};\r\n};\r\n*/\r\n}\r\n\r\nexport const getSingleCharacterInfo = id => {\r\n  return dispatch => {\r\n    axios\r\n      .get(`characters/${id}`)\r\n      .then(response => {\r\n        const data = response.data;\r\n\r\n        dispatch(setSingleCharacter(data));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\nexport const setSingleCharacter = data => {\r\n  return {type: 'SET_SINGLE_CHARACTER', payload: data};\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from '../config/axios';\r\nimport { connect } from 'react-redux';\r\nimport { setAllCharacters } from '../actions/characterActions';\r\nimport { getSingleCharacterInfo } from '../actions/characterActions';\r\nimport './Character.css';\r\n\r\nclass Characters extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      visible: false,\r\n      user: {},\r\n      char_id: '',\r\n      name: '',\r\n      portrayed: '',\r\n      occupation: [],\r\n      status: '',\r\n      img: '',\r\n      nickname: '',\r\n      heel: '',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(setAllCharacters());\r\n  }\r\n\r\n  handleSearchChange = (e) => {\r\n    this.setState({ input: e.target.value.substr(0, 20) });\r\n  };\r\n  handleToggle = () => {\r\n    this.setState((prev) => {\r\n      return {\r\n        visible: !prev.visible,\r\n      };\r\n    });\r\n  };\r\n  handleGetCharacterInfo = (\r\n    char_id,\r\n    name,\r\n    portrayed,\r\n    occupation,\r\n    status,\r\n    img,\r\n    nickname\r\n  ) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        visible: !prevState.visible,\r\n        char_id: char_id,\r\n        name: name,\r\n        portrayed,\r\n        occupation,\r\n        status,\r\n        img,\r\n        nickname,\r\n      };\r\n    });\r\n    this.props.dispatch(getSingleCharacterInfo(char_id));\r\n  };\r\n  render() {\r\n    let inputSearched = this.props.characters.filter((result) => {\r\n      return (\r\n        result.name.toLowerCase().indexOf(this.state.input.toLowerCase()) !== -1\r\n      );\r\n    });\r\n    return (\r\n      <div className='row'>\r\n        <h1 className='heading'>Characters</h1>\r\n        <div className='input_add'>\r\n          <label className='label_search'>\r\n            Search Your Favorite Characters :\r\n          </label>\r\n          <input\r\n            onChange={this.handleSearchChange}\r\n            value={this.state.input}\r\n            className='Input_attribute'\r\n          />\r\n        </div>\r\n        <div className='row_posters'>\r\n          {inputSearched.map((char) => {\r\n            return (\r\n              <>\r\n                <li key={char.char_id} className='list_poster'>\r\n                  <img\r\n                    onClick={() => {\r\n                      this.handleGetCharacterInfo(\r\n                        char.char_id,\r\n                        char.name,\r\n                        char.portrayed,\r\n                        char.occupation,\r\n                        char.status,\r\n                        char.img,\r\n                        char.nickname\r\n                      );\r\n                    }}\r\n                    className='image_poster'\r\n                    key={char.id}\r\n                    src={char.img}\r\n                    alt='breaking bad cast image'\r\n                  />\r\n                  <span className='poster_name'> {char.name}</span>\r\n                </li>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n        {this.state.visible && (\r\n          <div className='extra_info' onClick={() => this.handleToggle()}>\r\n            <div className='only_info'>\r\n              <h2>Screen Name: {this.state.name}</h2>\r\n              <h3>Actor Name: {this.state.portrayed}</h3>\r\n              <h4>Nickname: {this.state.nickname}</h4>\r\n              <h4>\r\n                Occupation:\r\n                {this.state.occupation.map((occ) => {\r\n                  return <> {`'${occ}',`} </>;\r\n                })}\r\n              </h4>\r\n              <h5>Live or Dead: {this.state.status}</h5>\r\n              <br />\r\n              <small style={{ color: ' pink' }}>\r\n                Click on here to hide Info\r\n              </small>\r\n              <br />\r\n              <br />\r\n            </div>\r\n\r\n            <div className='only_image'>\r\n              <label className='only_label'>Actor Image</label>\r\n              <img\r\n                className='char_char_image'\r\n                src={this.state.img}\r\n                alt={this.state.name}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    characters: state.characters,\r\n    single: state.single,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Characters);\r\n","import React, {Component} from 'react';\r\nimport axios from '../config/axios';\r\nimport {connect} from 'react-redux';\r\nimport './Background.css';\r\n//import {getRandomCharacter} from '../actions/characterActions';\r\n\r\nexport class Background extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get('/character/random')\r\n      .then(response => {\r\n        const random = response.data;\r\n        this.setState({data: random});\r\n\r\n        console.log(random, 'background', 'hellobklhjb,');\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(typeof this.state.data, 'state');\r\n    return (\r\n      <header\r\n        className='banner'\r\n        style={{\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          backgroundImage:\r\n            'url(https://static0.srcdn.com/wordpress/wp-content/uploads/2019/01/Breaking-Bad-Movie-Characters.jpg?q=50&fit=crop&w=767&h=450&dpr=1.5)',\r\n        }}>\r\n        <div className='banner_contents'>\r\n          <h1 className='banner_title'></h1>\r\n        </div>\r\n        <div className='banner_fadeButtom'></div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    image: state.image,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Background);\r\n","import axios from '../config/axios';\r\n\r\nexport const getStartingEpisode = () => {\r\n  return dispatch =>\r\n    axios\r\n      .get('/episodes')\r\n      .then(response => {\r\n        const data = response.data;\r\n        dispatch(setEpisodes(data));\r\n        console.log(data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n};\r\nexport const setEpisodes = data => {\r\n  return {type: 'SET_START_EPISODES', payload: data};\r\n};\r\n","const Trailers = {\r\n  season1: 'HhesaQXLuRY',\r\n  season2: 'I-8914DuyhY',\r\n  season3: 'ZK2IQ3LbLYk',\r\n  season4: 'WcUmzPcQEJo',\r\n  season5: '3oFofYisAko',\r\n  all: 'lrcqbavlbyQ',\r\n};\r\nexport default Trailers;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getStartingEpisode} from '../actions/episodesAction';\r\nimport './Episodes.css';\r\nimport Trailers from './Trailers';\r\nimport YouTube from 'react-youtube';\r\n\r\nexport class Episodes extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      search: '',\r\n      extra: false,\r\n      episode_id: '',\r\n      air_date: '',\r\n      title: '',\r\n      characters: [],\r\n      season: '',\r\n    };\r\n  }\r\n  handleExtra = (episode_id, air_date, title, characters, season) => {\r\n    this.setState(prev => {\r\n      return {\r\n        extra: !prev.extra,\r\n        episode_id,\r\n        air_date,\r\n        title,\r\n        characters,\r\n        season,\r\n      };\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getStartingEpisode());\r\n  }\r\n  handleSearchChange = e => {\r\n    this.setState({search: e.target.value.substr(0, 20)});\r\n  };\r\n  render() {\r\n    const searchedResult = this.props.episodes.filter(ele => {\r\n      return (\r\n        ele.title.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1\r\n      );\r\n    });\r\n\r\n    const opts = {\r\n      height: '390',\r\n      width: '640',\r\n      playerVars: {\r\n        autoplay: 1,\r\n      },\r\n    };\r\n    return (\r\n      <div className='row_episode'>\r\n        <h1 className='heading_episode'>Episodes</h1>\r\n        <div className='input_add'>\r\n          <label className='label_search'>Search Your Favorite Episode :</label>\r\n          <input\r\n            onChange={this.handleSearchChange}\r\n            value={this.state.search}\r\n            className='Input_attribute'\r\n          />\r\n        </div>\r\n        <div className='row_posters'>\r\n          {searchedResult.map((epi, i) => {\r\n            return (\r\n              <div\r\n                className='post'\r\n                onClick={() =>\r\n                  this.handleExtra(\r\n                    epi.episode_id,\r\n                    epi.air_date,\r\n                    epi.title,\r\n                    epi.characters,\r\n                    epi.season\r\n                  )\r\n                }>\r\n                {i} {epi.title}\r\n                <br />\r\n                <li>Season {epi.season}</li>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        {this.state.extra && (\r\n          <div className='extra_info' onClick={() => this.handleExtra()}>\r\n            <div className='only_information'>\r\n              <div className='left_info'>\r\n                <li className='bullets'>\r\n                  <h3>Title: {this.state.title} </h3>\r\n                  <h4>Episode ID: {this.state.episode_id} </h4>\r\n                  <h5>Air Date: {this.state.air_date} </h5>\r\n                  <h4>Season: {this.state.season}</h4>\r\n                </li>\r\n              </div>\r\n              <div className='right_info'>\r\n                <h3>\r\n                  Characters :\r\n                  {this.state.characters.map(char => {\r\n                    return <li> {`'${char}',`} </li>;\r\n                  })}{' '}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            <div className='YouTube_part'>\r\n              {this.state.season && (\r\n                <div>\r\n                  {this.state.season == 1 ? (\r\n                    <YouTube videoId={Trailers.season1} opts={opts} />\r\n                  ) : this.state.season == 2 ? (\r\n                    <YouTube videoId={Trailers.season2} opts={opts} />\r\n                  ) : this.state.season == 3 ? (\r\n                    <YouTube videoId={Trailers.season3} opts={opts} />\r\n                  ) : this.state.season == 4 ? (\r\n                    <YouTube videoId={Trailers.season4} opts={opts} />\r\n                  ) : this.state.season == 5 ? (\r\n                    <YouTube videoId={Trailers.season5} opts={opts} />\r\n                  ) : (\r\n                    <YouTube videoId={Trailers.all} opts={opts} />\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    episodes: state.episodes,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Episodes);\r\n","import './Navbar.css';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nfunction Navbar() {\r\n  const [show, handleShow] = useState([]);\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener('scroll');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && 'nav_black'}`}>\r\n      <img\r\n        className='nav_logo'\r\n        alt='Netflix Logo'\r\n        src='https://images.amcnetworks.com/amc.com/wp-content/uploads/2015/06/amc-logo-gold-redesign-1200x707.jpg'\r\n      />\r\n\r\n      <a href='https://github.com/imnotharsha'>\r\n        <img\r\n          className='nav_avatar'\r\n          alt='Netflix Avatar'\r\n          src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRZcKR3b2Q6L7kLv3kV04kBtcs-FaYRsYfxRQ&usqp=CAU'\r\n        />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport Characters from './components/Characters';\nimport Background from './components/Background';\nimport Episodes from './components/Episodes';\nimport Navbar from './components/Navbar';\n//import {BrowserRouter, Route, Link} from 'react-router-dom';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Navbar />\n      <Background />\n      <Characters />\n      <Episodes />\n    </div>\n  );\n}\n\nexport default App;\n","const characterInitState = [];\r\n\r\nconst charactersReducers = (state = characterInitState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_START_CHARACTERS': {\r\n      return [...state, ...action.payload];\r\n    }\r\n    default: {\r\n      return [...state];\r\n    }\r\n  }\r\n};\r\nexport default charactersReducers;\r\n","const imageInitState = [];\r\n\r\nconst imageReducers = (state = imageInitState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_START_IMAGE': {\r\n      return [...action.payload];\r\n    }\r\n    default: {\r\n      return [...state];\r\n    }\r\n  }\r\n};\r\nexport default imageReducers;\r\n","const charInitState = [];\r\nconst singleReducers = (state = charInitState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_SINGLE_CHARACTER': {\r\n      return [...action.payload];\r\n    }\r\n    default: {\r\n      return [...state];\r\n    }\r\n  }\r\n};\r\nexport default singleReducers;\r\n","const epiInitState = [];\r\nconst episodesReducers = (state = epiInitState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_START_EPISODES': {\r\n      return [...state, ...action.payload];\r\n    }\r\n    default: {\r\n      return [...state];\r\n    }\r\n  }\r\n};\r\nexport default episodesReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\nconsole.log(store.getState(), 'store initial state');\n\nstore.subscribe(() => {\n  console.log(store.getState(), 'store change result');\n});\n\nconst jsx = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(jsx, document.getElementById('root'));\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport charactersReducers from '../reducers/charactersReducers';\r\nimport imageReducers from '../reducers/imageReducers';\r\nimport singleReducers from '../reducers/singleReducers';\r\nimport episodesReducers from '../reducers/episodesReducers';\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      characters: charactersReducers,\r\n      image: imageReducers,\r\n      single: singleReducers,\r\n      episodes: episodesReducers,\r\n    }),\r\n    applyMiddleware(thunk)\r\n  );\r\n  return store;\r\n};\r\nexport default configureStore;\r\n"],"sourceRoot":""}